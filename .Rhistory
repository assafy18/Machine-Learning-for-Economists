knitr::opts_chunk$set(eval = TRUE,
echo = TRUE,
warning = FALSE,
message = FALSE)
pacman::p_load(tidyverse, haven, Hmisc, dplyr, kableExtra, fixest, modelsummary, tidymodels, causalTree, experimentdatar, rpart.plot, summarytools)
data("vouchers")
# Main data set
vouchers <- vouchers %>%
rename_with(~ tolower(.)) %>%
filter(!is.na(id))
# Tests data set
tests <- read_sas("tab5v1.sas7bdat") %>%
rename_with(~ tolower(.))
knitr::opts_chunk$set(eval = TRUE,
echo = TRUE,
warning = FALSE,
message = FALSE)
pacman::p_load(tidyverse, haven, Hmisc, dplyr, kableExtra, fixest, modelsummary, tidymodels, causalTree, experimentdatar, rpart.plot, summarytools)
data("vouchers")
# Main data set
vouchers <- vouchers %>%
rename_with(~ tolower(.)) %>%
filter(!is.na(id))
# Tests data set
tests <- read_sas("tab5v1.sas7bdat") %>%
rename_with(~ tolower(.))
# Creating the subsamples
vouchers_pop <- vouchers %>% filter(dbogota  + djamundi > 0)  # Population:  1995 and 1997 applicant cohorts from Bogotá and the 1993 cohort from Jamundí
vouchers_pop_bog95 <- vouchers_pop %>% filter(dbogota == 1 & d1995 == 1) # Bogotá 1995
vouchers_pop_bog97 <- vouchers_pop %>% filter(dbogota == 1 & d1997 == 1) # Bogotá 1997
vouchers_pop_jam93 <- vouchers_pop %>% filter(djamundi == 1 & d1993 == 1) # Jamundí 1993
# Same for Attempted Interviews
vouchers_attempt <- vouchers %>% filter(bog95asd + bog97asd + jam93asd > 0)
vouchers_attempt_bog95 <- vouchers_attempt %>% filter(bog95asd == 1)
vouchers_attempt_bog97 <- vouchers_attempt %>% filter(bog97asd == 1)
vouchers_attempt_jam93 <- vouchers_attempt %>% filter(jam93asd == 1)
# Completed Interviews
vouchers_comp <- vouchers %>% filter(bog95smp + bog97smp + jam93smp > 0)
vouchers_comp_bog95 <- vouchers_comp %>% filter(bog95smp == 1)
vouchers_comp_bog97 <- vouchers_comp %>% filter(bog97smp == 1)
vouchers_comp_jam93 <- vouchers_comp %>% filter(jam93smp == 1)
# Panel A
table1A <- tibble(
Variable = c("N", "Percentage awarded vouchers"),
`Bogotá 1995` = c(
nrow(vouchers_pop_bog95),
round(100 * mean(vouchers_pop_bog95$vouch0, na.rm = TRUE), 1)
),
`Bogotá 1997` = c(
nrow(vouchers_pop_bog97),
round(100 * mean(vouchers_pop_bog97$vouch0, na.rm = TRUE), 1)
),
`Jamundí 1995` = c(
nrow(vouchers_pop_jam93),
round(100 * mean(vouchers_pop_jam93$vouch0, na.rm = TRUE), 1)
),
`Combined sample` = c(
nrow(vouchers_pop),
round(100 * mean(vouchers_pop$vouch0, na.rm = TRUE), 1)
)
)
# Panel N
table1B <- tibble(
Variable = c("N", "Percentage awarded vouchers", "Response rate", "Winner rate", "Loser rate"),
`Bogotá 1995` = c(
nrow(vouchers_attempt_bog95),
round(100 * mean(vouchers_attempt_bog95$vouch0, na.rm = TRUE), 1),
round(mean(vouchers_attempt_bog95$response, na.rm = TRUE), 3),
round(mean(vouchers_attempt_bog95$response[vouchers_attempt_bog95$vouch0 == 1], na.rm = TRUE),3),
round(mean(vouchers_attempt_bog95$response[vouchers_attempt_bog95$vouch0 == 0], na.rm = TRUE),3)
),
`Bogotá 1997` = c(
nrow(vouchers_attempt_bog97),
round(100 * mean(vouchers_attempt_bog97$vouch0, na.rm = TRUE), 1),
round(mean(vouchers_attempt_bog97$response, na.rm = TRUE), 3),
round(mean(vouchers_attempt_bog97$response[vouchers_attempt_bog97$vouch0 == 1], na.rm = TRUE),3),
round(mean(vouchers_attempt_bog97$response[vouchers_attempt_bog97$vouch0 == 0], na.rm = TRUE),3)
),
`Jamundí 1995` = c(
nrow(vouchers_attempt_jam93),
round(100 * mean(vouchers_attempt_jam93$vouch0, na.rm = TRUE), 1),
round(mean(vouchers_attempt_jam93$response, na.rm = TRUE), 3),
round(mean(vouchers_attempt_jam93$response[vouchers_attempt_jam93$vouch0 == 1], na.rm = TRUE),3),
round(mean(vouchers_attempt_jam93$response[vouchers_attempt_jam93$vouch0 == 0], na.rm = TRUE),3)
),
`Combined sample` = c(
nrow(vouchers_attempt),
round(100 * mean(vouchers_attempt$vouch0, na.rm = TRUE), 1),
round(mean(vouchers_attempt$response, na.rm = TRUE), 3),
round(mean(vouchers_attempt$response[vouchers_attempt$vouch0 == 1], na.rm = TRUE),3),
round(mean(vouchers_attempt$response[vouchers_attempt$vouch0 == 0], na.rm = TRUE),3)
)
)
# Panel C
table1C <- tibble(
Variable = c("N", "Percentage awarded vouchers", "Household visit", "Age at time of application", " ", "Age on survey date (from survey data)", " ", "Male", "Started 6th grade in private", "Started 7th grade in private", "Currently in private school", "Highest grade completed", " ", "Currently in school"),
`Bogotá 1995` = c(
nrow(vouchers_comp_bog95),
round(100 * mean(vouchers_comp_bog95$vouch0, na.rm = TRUE), 1),
round(mean(vouchers_comp_bog95$hsvisit, na.rm = TRUE),3),
round(mean(vouchers_comp_bog95$age2, na.rm = TRUE),1),
paste0("(",round(sd(vouchers_comp_bog95$age2, na.rm = TRUE),1), ")"),
round(mean(vouchers_comp_bog95$age, na.rm = TRUE),1),
paste0("(",round(sd(vouchers_comp_bog95$age, na.rm = TRUE),1), ")"),
round(mean(vouchers_comp_bog95$sex, na.rm = TRUE),3),
round(mean(vouchers_comp_bog95$prscha_1, na.rm = TRUE),3),
round(mean(vouchers_comp_bog95$prscha_2, na.rm = TRUE),3),
round(mean(vouchers_comp_bog95$prsch_c, na.rm = TRUE),3),
round(mean(vouchers_comp_bog95$scyfnsh, na.rm = TRUE),1),
paste0("(",round(sd(vouchers_comp_bog95$scyfnsh, na.rm = TRUE),3), ")"),
round(mean(vouchers_comp_bog95$inschl, na.rm = TRUE),3)
),
`Bogotá 1997` = c(
nrow(vouchers_comp_bog97),
round(100 * mean(vouchers_comp_bog97$vouch0, na.rm = TRUE), 1),
round(mean(vouchers_comp_bog97$hsvisit, na.rm = TRUE),3),
round(mean(vouchers_comp_bog97$age2, na.rm = TRUE),1),
paste0("(",round(sd(vouchers_comp_bog97$age2, na.rm = TRUE),1), ")"),
round(mean(vouchers_comp_bog97$age, na.rm = TRUE),1),
paste0("(",round(sd(vouchers_comp_bog97$age, na.rm = TRUE),1), ")"),
round(mean(vouchers_comp_bog97$sex, na.rm = TRUE),3),
round(mean(vouchers_comp_bog97$prscha_1, na.rm = TRUE),3),
round(mean(vouchers_comp_bog97$prscha_2, na.rm = TRUE),3),
round(mean(vouchers_comp_bog97$prsch_c, na.rm = TRUE),3),
round(mean(vouchers_comp_bog97$scyfnsh, na.rm = TRUE),1),
paste0("(",round(sd(vouchers_comp_bog97$scyfnsh, na.rm = TRUE),3), ")"),
round(mean(vouchers_comp_bog97$inschl, na.rm = TRUE),3)
),
`Jamundí 1995` = c(
nrow(vouchers_comp_jam93),
round(100 * mean(vouchers_comp_jam93$vouch0, na.rm = TRUE), 1),
round(mean(vouchers_comp_jam93$hsvisit, na.rm = TRUE),3),
round(mean(vouchers_comp_jam93$age2, na.rm = TRUE),1),
paste0("(",round(sd(vouchers_comp_jam93$age2, na.rm = TRUE),1), ")"),
round(mean(vouchers_comp_jam93$age, na.rm = TRUE),1),
paste0("(",round(sd(vouchers_comp_jam93$age, na.rm = TRUE),1), ")"),
round(mean(vouchers_comp_jam93$sex, na.rm = TRUE),3),
round(mean(vouchers_comp_jam93$prscha_1, na.rm = TRUE),3),
round(mean(vouchers_comp_jam93$prscha_2, na.rm = TRUE),3),
round(mean(vouchers_comp_jam93$prsch_c, na.rm = TRUE),3),
round(mean(vouchers_comp_jam93$scyfnsh, na.rm = TRUE),1),
paste0("(",round(sd(vouchers_comp_jam93$scyfnsh, na.rm = TRUE),3), ")"),
round(mean(vouchers_comp_jam93$inschl, na.rm = TRUE),3)
),
`Combined sample` = c(
nrow(vouchers_comp),
round(100 * mean(vouchers_comp$vouch0, na.rm = TRUE), 1),
round(mean(vouchers_comp$hsvisit, na.rm = TRUE),3),
round(mean(vouchers_comp$age2, na.rm = TRUE),1),
paste0("(",round(sd(vouchers_comp$age2, na.rm = TRUE),1), ")"),
round(mean(vouchers_comp$age, na.rm = TRUE),1),
paste0("(",round(sd(vouchers_comp$age, na.rm = TRUE),1), ")"),
round(mean(vouchers_comp$sex, na.rm = TRUE),3),
round(mean(vouchers_comp$prscha_1, na.rm = TRUE),3),
round(mean(vouchers_comp$prscha_2, na.rm = TRUE),3),
round(mean(vouchers_comp$prsch_c, na.rm = TRUE),3),
round(mean(vouchers_comp$scyfnsh, na.rm = TRUE),1),
paste0("(",round(sd(vouchers_comp$scyfnsh, na.rm = TRUE),3), ")"),
round(mean(vouchers_comp$inschl, na.rm = TRUE),3)
),
)
table1 <- rbind(table1A, table1B, table1C)
kable(table1,
caption = "Table 1—Sample Design and Survey Response Data") %>%
kable_classic(full_width = F) %>%
pack_rows(index = c("A. Population:" = 2, "B. Attempted Interviews:" = 5, "C. Completed Interviews:" = 14)) %>%
footnote("Standard deviations for nonbinary variables are shown in parentheses. Sample sizes may differ across rows. Data are from 1998 household surveys. “Age at time of application” is imputed from the National Identification number reported on the application.")
vouchers_tab3 <- vouchers_comp %>% filter(tab3smpl == 1)
vouchers_tab3_bog95 <- vouchers_tab3 %>% filter(bog95 == 1)
vouchers_tab3_bog95_los <- vouchers_tab3_bog95 %>% filter(vouch0 == 0)
loser_means <- tibble(
`Dependent variable` = c(
"Using any scholarship in survey year",
" ",
"Started 6th grade in private",
" ",
"Started 7th grade in private",
" ",
"Currently in private school",
" ",
"Highest grade completed",
" ",
"Currently in school",
" ",
"Finished 6th grade",
" ",
"Finished 7th grade (excludes Bogota 97)",
" ",
"Finished 8th grade (excludes Bogota 97)",
" ",
"Repetitions of 6th grade",
" ",
"Ever repeated after lottery",
" ",
"Total repetitions since lottery",
" ",
"Years in school since lottery",
" ",
"Sample size"
),
`(1)` = c(
round(mean(vouchers_tab3_bog95_los$usngsch, na.rm = T),3),
paste0("(", round(sd(vouchers_tab3_bog95_los$usngsch, na.rm = T),3), ")"),
round(mean(vouchers_tab3_bog95_los$prscha_1, na.rm = T),3),
paste0("(", round(sd(vouchers_tab3_bog95_los$prscha_1, na.rm = T),3), ")"),
round(mean(vouchers_tab3_bog95_los$prscha_2, na.rm = T),3),
paste0("(", round(sd(vouchers_tab3_bog95_los$prscha_2, na.rm = T),3), ")"),
round(mean(vouchers_tab3_bog95_los$prsch_c, na.rm = T),3),
paste0("(", round(sd(vouchers_tab3_bog95_los$prsch_c, na.rm = T),3), ")"),
round(mean(vouchers_tab3_bog95_los$scyfnsh, na.rm = T),1),
paste0("(", round(sd(vouchers_tab3_bog95_los$scyfnsh, na.rm = T),3), ")"),
round(mean(vouchers_tab3_bog95_los$inschl, na.rm = T),3),
paste0("(", round(sd(vouchers_tab3_bog95_los$inschl, na.rm = T),3), ")"),
round(mean(vouchers_tab3_bog95_los$finish6, na.rm = T),3),
paste0("(", round(sd(vouchers_tab3_bog95_los$finish6, na.rm = T),3), ")"),
round(mean(vouchers_tab3_bog95_los$finish7, na.rm = T),3),
paste0("(", round(sd(vouchers_tab3_bog95_los$finish7, na.rm = T),3), ")"),
round(mean(vouchers_tab3_bog95_los$finish8, na.rm = T),3),
paste0("(", round(sd(vouchers_tab3_bog95_los$finish8, na.rm = T),3), ")"),
round(mean(vouchers_tab3_bog95_los$rept6, na.rm = T),3),
paste0("(", round(sd(vouchers_tab3_bog95_los$rept6, na.rm = T),3), ")"),
round(mean(vouchers_tab3_bog95_los$rept, na.rm = T),3),
paste0("(", round(sd(vouchers_tab3_bog95_los$rept, na.rm = T),3), ")"),
round(mean(vouchers_tab3_bog95_los$nrept, na.rm = T),3),
paste0("(", round(sd(vouchers_tab3_bog95_los$nrept, na.rm = T),3), ")"),
round(mean(vouchers_tab3_bog95_los$totscyrs, na.rm = T),1),
paste0("(", round(sd(vouchers_tab3_bog95_los$totscyrs, na.rm = T),3), ")"),
nrow(vouchers_tab3_bog95_los)
)
)
# Model 1
m1 <- vouchers_tab3_bog95 %>% feols(c(usngsch, prscha_1, prscha_2, prsch_c, scyfnsh, inschl, finish6, finish7, finish8, rept6, rept, nrept, totscyrs)
~ vouch0, se = "hetero")
# Model 2
m2 <- vouchers_tab3_bog95 %>% feols(c(usngsch, prscha_1, prscha_2, prsch_c, scyfnsh, inschl, finish6, finish7, finish8, rept6, rept, nrept, totscyrs)
~ vouch0
+ svy + hsvisit + phone + age + sex2
+ dmonth2 + dmonth3 + dmonth4 + dmonth5 + dmonth6 + dmonth7 + dmonth8 + dmonth9 + dmonth10 + dmonth11 + dmonth12
+ strata2 + strata3 + strata4 + strata5 + stratams
, se = "hetero")
# Model 3
m3 <- vouchers_tab3_bog95 %>% feols(c(usngsch, prscha_1, prscha_2, prsch_c, scyfnsh, inschl, finish6, finish7, finish8, rept6, rept, nrept, totscyrs)
~ vouch0
+ svy + hsvisit + phone + age + sex2
+ dmonth2 + dmonth3 + dmonth4 + dmonth5 + dmonth6 + dmonth7 + dmonth8 + dmonth9 + dmonth10 + dmonth11 + dmonth12
+ strata2 + strata3 + strata4 + strata5 + stratams
+ darea1 + darea2 + darea3 + darea4 + darea5 + darea6 + darea7 + darea8 + darea9 + darea10 + darea11 + darea12 + darea13 + darea14 + darea15 + darea16 + darea17 + darea18 + darea19
, se = "hetero")
bog95_results <- tibble(
`(2)` = c(
round(m1[[1]]$coefficients["vouch0"], 3),
paste0("(", round(m1[[1]]$se["vouch0"], 3), ")"),
round(m1[[2]]$coefficients["vouch0"], 3),
paste0("(", round(m1[[2]]$se["vouch0"], 3), ")"),
round(m1[[3]]$coefficients["vouch0"], 3),
paste0("(", round(m1[[3]]$se["vouch0"], 3), ")"),
round(m1[[4]]$coefficients["vouch0"], 3),
paste0("(", round(m1[[4]]$se["vouch0"], 3), ")"),
round(m1[[5]]$coefficients["vouch0"], 3),
paste0("(", round(m1[[5]]$se["vouch0"], 3), ")"),
round(m1[[6]]$coefficients["vouch0"], 3),
paste0("(", round(m1[[6]]$se["vouch0"], 3), ")"),
round(m1[[7]]$coefficients["vouch0"], 3),
paste0("(", round(m1[[7]]$se["vouch0"], 3), ")"),
round(m1[[8]]$coefficients["vouch0"], 3),
paste0("(", round(m1[[8]]$se["vouch0"], 3), ")"),
round(m1[[9]]$coefficients["vouch0"], 3),
paste0("(", round(m1[[9]]$se["vouch0"], 3), ")"),
round(m1[[10]]$coefficients["vouch0"], 3),
paste0("(", round(m1[[10]]$se["vouch0"], 3), ")"),
round(m1[[11]]$coefficients["vouch0"], 3),
paste0("(", round(m1[[11]]$se["vouch0"], 3), ")"),
round(m1[[12]]$coefficients["vouch0"], 3),
paste0("(", round(m1[[12]]$se["vouch0"], 3), ")"),
round(m1[[13]]$coefficients["vouch0"], 3),
paste0("(", round(m1[[13]]$se["vouch0"], 3), ")"),
m1[[13]]$nobs
),
`(3)` = c(
round(m2[[1]]$coefficients["vouch0"], 3),
paste0("(", round(m2[[1]]$se["vouch0"], 3), ")"),
round(m2[[2]]$coefficients["vouch0"], 3),
paste0("(", round(m2[[2]]$se["vouch0"], 3), ")"),
round(m2[[3]]$coefficients["vouch0"], 3),
paste0("(", round(m2[[3]]$se["vouch0"], 3), ")"),
round(m2[[4]]$coefficients["vouch0"], 3),
paste0("(", round(m2[[4]]$se["vouch0"], 3), ")"),
round(m2[[5]]$coefficients["vouch0"], 3),
paste0("(", round(m2[[5]]$se["vouch0"], 3), ")"),
round(m2[[6]]$coefficients["vouch0"], 3),
paste0("(", round(m2[[6]]$se["vouch0"], 3), ")"),
round(m2[[7]]$coefficients["vouch0"], 3),
paste0("(", round(m2[[7]]$se["vouch0"], 3), ")"),
round(m2[[8]]$coefficients["vouch0"], 3),
paste0("(", round(m2[[8]]$se["vouch0"], 3), ")"),
round(m2[[9]]$coefficients["vouch0"], 3),
paste0("(", round(m2[[9]]$se["vouch0"], 3), ")"),
round(m2[[10]]$coefficients["vouch0"], 3),
paste0("(", round(m2[[10]]$se["vouch0"], 3), ")"),
round(m2[[11]]$coefficients["vouch0"], 3),
paste0("(", round(m2[[11]]$se["vouch0"], 3), ")"),
round(m2[[12]]$coefficients["vouch0"], 3),
paste0("(", round(m2[[12]]$se["vouch0"], 3), ")"),
round(m2[[13]]$coefficients["vouch0"], 3),
paste0("(", round(m2[[13]]$se["vouch0"], 3), ")"),
m2[[13]]$nobs
),
`(4)` = c(
round(m3[[1]]$coefficients["vouch0"], 3),
paste0("(", round(m3[[1]]$se["vouch0"], 3), ")"),
round(m3[[2]]$coefficients["vouch0"], 3),
paste0("(", round(m3[[2]]$se["vouch0"], 3), ")"),
round(m3[[3]]$coefficients["vouch0"], 3),
paste0("(", round(m3[[3]]$se["vouch0"], 3), ")"),
round(m3[[4]]$coefficients["vouch0"], 3),
paste0("(", round(m3[[4]]$se["vouch0"], 3), ")"),
round(m3[[5]]$coefficients["vouch0"], 3),
paste0("(", round(m3[[5]]$se["vouch0"], 3), ")"),
round(m3[[6]]$coefficients["vouch0"], 3),
paste0("(", round(m3[[6]]$se["vouch0"], 3), ")"),
round(m3[[7]]$coefficients["vouch0"], 3),
paste0("(", round(m3[[7]]$se["vouch0"], 3), ")"),
round(m3[[8]]$coefficients["vouch0"], 3),
paste0("(", round(m3[[8]]$se["vouch0"], 3), ")"),
round(m3[[9]]$coefficients["vouch0"], 3),
paste0("(", round(m3[[9]]$se["vouch0"], 3), ")"),
round(m3[[10]]$coefficients["vouch0"], 3),
paste0("(", round(m3[[10]]$se["vouch0"], 3), ")"),
round(m3[[11]]$coefficients["vouch0"], 3),
paste0("(", round(m3[[11]]$se["vouch0"], 3), ")"),
round(m3[[12]]$coefficients["vouch0"], 3),
paste0("(", round(m3[[12]]$se["vouch0"], 3), ")"),
round(m3[[13]]$coefficients["vouch0"], 3),
paste0("(", round(m3[[13]]$se["vouch0"], 3), ")"),
m3[[12]]$nobs
)
)
table3 <- cbind(loser_means, bog95_results)
kable(table3,
col.names = c(" ", "(1)", "(2)", "(3)", "(4)"),
caption = "Table 3 — Educational Outcomes and Voucher Status") %>%
kable_classic(full_width = F) %>%
add_header_above(c(" " = 1, "Loser means" = 1, "No controls" = 1, "Basic controls" = 1, "Basic + 19 barrio controls" = 1)) %>%
add_header_above(c(" " = 1, "Bogota 1995" = 4)) %>%
pack_rows(index = c("Scholarship Use" = 2,"School Choice" = 6, "Schooling" = 18)) %>%
footnote("The table reports voucher losers’ means and the estimated effect of winning a voucher. Numbers in parentheses are standard deviations in the column of means and standard errors in columns of estimated voucher effects. The regression estimates are from models that include controls for phone access, age, type of survey and instrument, strata of residence, and month of interview.")
print(dfSummary(vouchers_tab3_bog95), method = "render")
print(dfSummary(tests), method = "render")
set.seed(1234)
split_v <- initial_split(vouchers_tab3_bog95, prop = 0.5)
vouchers_tab3_bog95_train <- training(split_v) %>%
select(c(vouch0, rept,
sex, age2, hsvisit, svy, phone, mom_sch, dad_sch, starts_with("strata")))
vouchers_tab3_bog95_estim <- testing(split_v) %>%
select(c(vouch0, rept,
sex, age2, hsvisit, svy, phone, mom_sch, dad_sch, starts_with("strata")))
tree_rept <- honest.causalTree(
formula = "rept ~ . - vouch0",
data      = vouchers_tab3_bog95_train,
treatment = vouchers_tab3_bog95_train$vouch0,
est_data      = vouchers_tab3_bog95_estim,
est_treatment = vouchers_tab3_bog95_estim$vouch0,
split.Rule   = "CT", split.Honest = TRUE,
cv.option = "CT", cv.Honest = TRUE,
minsize = 10,
split.Bucket = TRUE,
bucketMax = 25,
HonestSampleSize = nrow(vouchers_tab3_bog95_estim)
)
# Extracting extract a table of cross-validated values by tuning parameter
cptable_rept <- as.data.frame(tree_rept$cptable)
# Obtaining the optimal $cp$ to prune the tree
min_cp_rept <- which.min(cptable_rept$xerror)
optim_cp_ct_rept <- cptable_rept[min_cp_rept, "CP"]
# Pruning the tree at the optimal $cp$
pruned_tree_rept <- prune(tree = tree_rept, cp = optim_cp_ct_rept)
# Print the pruned tree
rpart.plot(pruned_tree_rept)
# Form a tibble that holds both the training and estimation samples
vouchers_tab3_bog95_all <- tibble(
sample = c("training", "estimation"),
data   = list(vouchers_tab3_bog95_train, vouchers_tab3_bog95_estim)
)
# Assign each observation in the training and estimation sets to a leaf based on the tree
vouchers_tab3_bog95_all_leaf <- vouchers_tab3_bog95_all %>%
mutate(leaf = map(data, ~ predict(pruned_tree_rept,
newdata = .x,
type = "vector"))) %>%
mutate(leaf = map(leaf, ~ round(.x, 3))) %>%
mutate(leaf = map(leaf, ~ as.factor(.x))) %>%
mutate(leaf = map(leaf, ~ enframe(.x, name = NULL, value = "leaf"))) %>%
mutate(data = map2(data, leaf, ~ bind_cols(.x, .y)))
# Employ the lm() function with interaction terms for estimation of the average treatment effect within each leaf and provides confidence intervals
vouchers_tab3_bog95_all_lm  <-
vouchers_tab3_bog95_all_leaf %>%
mutate(model = map(data, ~ lm(rept ~ leaf + vouch0 * leaf
- vouch0 - 1, data = .x))) %>%
mutate(tidy = map(model, broom::tidy, conf.int = TRUE)) %>%
unnest(tidy)
# Visualizing Coefficients and Confidence Intervals
vouchers_tab3_bog95_all_lm %>%
filter(str_detect(term, pattern = ":vouch0")) %>%  # keep only interaction terms
ggplot(aes(x = term,
y = estimate,
ymin = conf.low,
ymax = conf.high
)
) +
geom_hline(yintercept = 0, color = "red") +
geom_pointrange(position = position_dodge(width = 1), size = 0.8) +
labs(
x = "",
y = "CATE and confidence interval"
) +
facet_grid(. ~ sample) +
coord_flip()
split_t <- initial_split(tests, prop = 0.5)
tests_train <- training(split_t) %>%
select(c(vouch0, totalpts,
sex, age2, hsvisit, svy, phone, mom_sch, dad_sch, starts_with("strata")))
tests_estim <- testing(split_t) %>%
select(c(vouch0, totalpts,
sex, age2, hsvisit, svy, phone, mom_sch, dad_sch, starts_with("strata")))
tree_tests <- honest.causalTree(
formula = "totalpts ~ . - vouch0",
data      = tests_train,
treatment = tests_train$vouch0,
est_data      = tests_estim,
est_treatment = tests_estim$vouch0,
split.Rule   = "CT", split.Honest = TRUE,
cv.option = "CT", cv.Honest = TRUE,
minsize = 5,
split.Bucket = TRUE,
bucketMax = 20,
HonestSampleSize = nrow(tests_estim)
)
# Extracting extract a table of cross-validated values by tuning parameter
cptable_tests <- as.data.frame(tree_tests$cptable)
# Obtaining the optimal $cp$ to prune the tree
min_cp_tests <- which.min(cptable_tests$xerror)
optim_cp_ct_tests <- cptable_tests[min_cp_tests, "CP"]
# Pruning the tree at the optimal $cp$
pruned_tree_tests <- prune(tree = tree_tests, cp = optim_cp_ct_tests)
# Print the pruned tree
rpart.plot(pruned_tree_tests)
# Form a tibble that holds both the training and estimation samples
tests_all <- tibble(
sample = c("training", "estimation"),
data   = list(tests_train, tests_estim)
)
# Assign each observation in the training and estimation sets to a leaf based on the tree
tests_all_leaf <- tests_all %>%
mutate(leaf = map(data, ~ predict(pruned_tree_tests,
newdata = .x,
type = "vector"))) %>%
mutate(leaf = map(leaf, ~ round(.x, 3))) %>%
mutate(leaf = map(leaf, ~ as.factor(.x))) %>%
mutate(leaf = map(leaf, ~ enframe(.x, name = NULL, value = "leaf"))) %>%
mutate(data = map2(data, leaf, ~ bind_cols(.x, .y)))
# Employ the lm() function with interaction terms for estimation of the average treatment effect within each leaf and provides confidence intervals
tests_all_lm  <-
tests_all_leaf %>%
mutate(model = map(data, ~ lm(totalpts ~ leaf + vouch0 * leaf
- vouch0 - 1, data = .x))) %>%
mutate(tidy = map(model, broom::tidy, conf.int = TRUE)) %>%
unnest(tidy) %>%
mutate()
# Visualizing Coefficients and Confidence Intervals
tests_all_lm %>%
filter(str_detect(term, pattern = ":vouch0")) %>%  # keep only interaction terms
ggplot(aes(x = term,
y = estimate,
ymin = conf.low,
ymax = conf.high
)
) +
geom_hline(yintercept = 0, color = "red") +
geom_pointrange(position = position_dodge(width = 1), size = 0.8) +
labs(
x = "",
y = "CATE and confidence interval"
) +
facet_grid(. ~ sample) +
coord_flip()
